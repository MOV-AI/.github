name: Build and pack Ros packages 
on:
  workflow_call:
    inputs:
      deploy:
        required: false
        type: string
        default: 'false'
      release:
        required: false
        type: string
        default: 'false'
      ros_distro:
        required: true
        type: string

    secrets:
      auto_commit_user:
        required: true
      auto_commit_mail:
        required: true
      registry_user:
        required: true
      registry_password:
        required: true
      nexus_publisher_user:
        required: true
      nexus_publisher_password:
        required: true
      aws_sqs_rosdep_access_key:
        required: true
      aws_sqs_rosdep_secret_access_key:
        required: true
      github_token:
        required: true
      sonar_token:
        required: true

jobs:
  Build:
    if: ${{ inputs.release == 'false' }}
    runs-on: ubuntu-20.04
    container:
      image: registry.cloud.mov.ai/devops/ros-buildtools-${{inputs.ros_distro}}:main
      options: --user root
      credentials:
        username: ${{secrets.registry_user}} 
        password: ${{secrets.registry_password}}

    steps:
    - name: Checkout    
      uses: actions/checkout@v2
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        submodules: recursive

    - name: Validate Repository Package.xml
      run: |
        expected_url="<url>$GITHUB_SERVER_URL/$GITHUB_REPOSITORY</url>"
        VALIDATION_FILE="/tmp/verification-failed"
        find -L ./ -type f -name 'package.xml' -exec sh -c '

        search_result=$(cat $0 | grep "$1")
        is_movai_package=$(cat $0 | grep "<name>movai_")

        # is movai package ?
        if [ -n "$is_movai_package" ]:
        then  
          if [ -z "$search_result" ]:
          then
              echo "\e[31m$0"
              touch $2
          fi 
        fi

        ' {} $expected_url $VALIDATION_FILE \;

        if [ -f $VALIDATION_FILE ];
        then    
            echo "\e[31mPlease add \033[0;36m$expected_url \e[31mto all the package.xmls mentioned above!"
            exit 1
        fi 

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v1.0.0
      env:
        SONAR_TOKEN: ${{ secrets.sonar_token }}
        SONAR_HOST_URL: https://sonarqube.aws.cloud.mov.ai
      with:
        projectBaseDir: ./
        args: >
          -Dsonar.organization=MOV-AI
          -Dsonar.projectKey=${{ github.event.repository.name }}
          -Dsonar.verbose=true
          -Dsonar.sources=.
          -Dsonar.scm.provider=git
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=300

    - name: Link to SonarQube Dashboard
      shell: bash
      run: |
        echo "Please check report here: https://sonarqube.aws.cloud.mov.ai/dashboard?id=${{ github.event.repository.name }}"
      id: sonar_links

    - name: Install Mobros
      run: python3 -m pip install mobros==1.0.1.21 --ignore-installed

    - name: Setup link to Ros userspace
      run: |
        mkdir /opt/mov.ai/user/cache/ros/src/
        ln -s $(pwd)/* /opt/mov.ai/user/cache/ros/src/

    - name: Raise version and validate Ros repository
      run: mobros raise --workspace="$(pwd)" 
    
    - name: Build
      run: mobros build 

    - name: Pack
      run: |
        export MOVAI_OUTPUT_DIR="$(pwd)/artifacts"
        mobros pack --workspace="$(pwd)" 

    - name: Archive binary
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: artifacts/*

    - name: Print generated packages
      run: |
        ls -la artifacts

    - name: Print generated rosdep
      run: |
        cat /usr/local/rosdep/ros-pkgs.yaml

    - name: Rosdep Publish
      if: ${{ inputs.deploy == 'true' }}
      run: |
        export AWS_DEFAULT_REGION="eu-west-1"
        export AWS_ACCESS_KEY_ID="${{ secrets.aws_sqs_rosdep_access_key }}"
        export AWS_SECRET_ACCESS_KEY='${{ secrets.aws_sqs_rosdep_secret_access_key }}'
        mobros publish
        cat /usr/local/rosdep/ros-pkgs.yaml
