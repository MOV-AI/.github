name: Build, Deploy and release Docker images
on:
  workflow_call:
    inputs:
      docker_registry:
        required: false
        type: string
        default: registry.cloud.mov.ai
      public_registry:
        required: false
        type: string
        default: pubregistry.cloud.mov.ai
      docker_file:
        required: true
        type: string
      docker_image:
        required: true
        type: string
      github_ref:
        required: true
        type: string
      public:
        required: false
        type: boolean
        default: false
    secrets:
      registry_user:
        required: true
      registry_password:
        required: true

jobs:
  build_deploy:
    runs-on: ubuntu-20.04
    permissions:
      contents: read
      packages: write
    env:
      DOCKER_PUSH: ${{ contains(inputs.github_ref, 'refs/heads/main') || contains(inputs.github_ref, 'refs/tags/v')}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Hadolint ${{ inputs.docker_file }}
        uses: hadolint/hadolint-action@v1.6.0
        with:
          dockerfile: ${{ inputs.docker_file }}
          format: tty
          failure-threshold: error # optional, default is info
          # A space separated string of rules to ignore
          # ignore: # optional
          # Path to a config file
          # config: # optional

      - name: Login to Private Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.registry_user }}
          password: ${{ secrets.registry_password }}
          registry: ${{ inputs.docker_registry }}

      - name: Login to Public Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.registry_user }}
          password: ${{ secrets.registry_password }}
          registry: ${{ inputs.public_registry }}

      - name: "Verify push and tag vars from env"
        id: get_version
        env:
          GITHUB_REF: ${{ inputs.github_ref }}
          DOCKER_PUSH: ${{ env.DOCKER_PUSH }}
        run: |
          echo $GITHUB_REF
          echo $DOCKER_PUSH
          if [ "${DOCKER_PUSH}" = "true" ]; then
            if [ "${GITHUB_REF}" = "refs/heads/main" ]; then
              echo ::set-output name=DOCKER_TAG::latest
            else
              echo ::set-output name=DOCKER_TAG::${GITHUB_REF##*/}
            fi
          else
            echo ::set-output name=DOCKER_TAG::local
          fi

      - name: "Verify push and tag vars from env"
        id: get_image_names
        env:
          PUBLIC_PUSH: ${{ inputs.public }}
          DOCKER_PUSH: ${{ env.DOCKER_PUSH }}
        run: |
          if [ "${DOCKER_PUSH}" = "true" ]; then
            DOCKER_IMAGES=${{ inputs.docker_registry }}.${{ inputs.docker_image }}:${{ steps.get_version.outputs.DOCKER_TAG }}

            # If public push is needed
            if [ "${PUBLIC_PUSH}" = "true" ]; then
              DOCKER_IMAGES="${DOCKER_IMAGES} ${{ inputs.docker_registry }}.${{ inputs.docker_image }}:${{ steps.get_version.outputs.DOCKER_TAG }}"
              echo ::set-output name=DOCKER_IMAGES::${DOCKER_IMAGES}
            fi
          fi
          echo "Images to publish: $DOCKER_IMAGES"

      - name: Build and push:${{ env.DOCKER_PUSH }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ inputs.docker_file }}
          push: ${{ env.DOCKER_PUSH }}
          # should use automatic tagging:
          # https://github.com/marketplace/actions/docker-build-push-action#tagging-the-image-using-gitops
          tags: |
            ${{ steps.get_image_names.outputs.DOCKER_IMAGES }}
          pull: true
