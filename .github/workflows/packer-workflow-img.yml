name: Build Packer images
on:
  workflow_call:
    inputs:
      deploy:
        required: true
        type: string
        default: 'false'
      image_type_list:
        required: true
        type: string

    secrets:
      auto_commit_user:
        required: true
      auto_commit_mail:
        required: true
      auto_commit_pwd:
        required: true
      packer_build_server:
        required: true
      packer_token_id:
        required: true
      packer_token_secret:
        required: true
      minio_key_id:
        required: true
      minio_secret_key_id:
        required: true

env:
  # slack channel movai-projects
  SLACK_CHANNEL: ${{ inputs.overwrite_slack_channel }}
  # development slack channel
  #SLACK_CHANNEL: "C05K2KF1UP8"
  MINIO_S3_URL: "https://s3.mov.ai"   

jobs:
  Build:
    runs-on: packer-runner
    outputs:
      raised_version: ${{ steps.raise.outputs.raised_version }}
    strategy:
      matrix:
        image_type: ${{ fromJSON(inputs.image_type_list) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Packer Validate
        run: |
          packer init .
          packer validate .

      - name: Raise Version
        id: raise
        shell: bash
        run: |
          cat version
          COMP_VERSION=$(cat version)
          main_version=${COMP_VERSION%-*}
          build_id="${COMP_VERSION#*-}"
          raised_buildid=$(($build_id+1))
          RAISED_COMP_VERSION="$main_version-$raised_buildid"
          echo $RAISED_COMP_VERSION>version
          echo $RAISED_COMP_VERSION
          echo "raised_version=$RAISED_COMP_VERSION" >> $GITHUB_OUTPUT

      - name: Packer build
        if: ${{ inputs.deploy == 'true' }}
        shell: bash
        run: |
          echo "Running ../build.bash ${{ matrix.image_type }}" 
          ./build.bash ${{ matrix.image_type }}
        env:
          PACKER_VERSION: ${{ steps.raise.outputs.raised_version }}
  

      - name: Stash build artifacts (Minio)
        # if: ${{ always() &&  inputs.with_simulation_tests }}
        if: ${{ inputs.deploy == 'true' }}
        shell: bash
        run: |
          aws \
          --endpoint-url ${{ env.MINIO_S3_URL }} \
          s3 \
          cp \
          ${{ matrix.image_type }}/output/ \
          s3://ci-artifacts/${{ github.repository }}/${{ github.run_id}}/${{ github.job }}/attempts/${{ github.run_attempt }} \
          --recursive

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.minio_key_id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.minio_secret_key_id }}
          AWS_DEFAULT_REGION: "us-east-1"
          AWS_DEFAULT_OUTPUT: "none"  

  Create-Release:
    runs-on: ubuntu-latest
    needs: Build
    if: ${{ inputs.deploy == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Commit raise
        if: ${{ inputs.deploy == 'true' }}
        run: |
          git config --global --add safe.directory $(pwd)
          git config --global user.name '${{ secrets.auto_commit_user }}'
          git config --global user.email '${{ secrets.auto_commit_mail }}'
          git config --global user.password ${{ secrets.auto_commit_pwd }}
          git restore version
          git pull
          echo "${{ needs.Build.outputs.raised_version }}">version
          git add version
          git commit -m "[skip actions] Automatic Bump of image version to ${{ needs.Build.outputs.raised_version }}"


      - name: Prepare raise variables
        id: pre_raise_push
        run: |
          echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
      - name: Raise App version
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.auto_commit_pwd }}
          branch: ${{ steps.pre_raise_push.outputs.branch }}
          unprotect_reviews: true
          
      - name: Commit info
        id: commit
        shell: bash
        run: |
          commit_hash=$(git log --format="%H" -n 1)
          echo "commit_id=$commit_hash" >> $GITHUB_OUTPUT

            
      - name: Create Github Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release of ${{ needs.Build.outputs.raised_version }}"
          body: "Please add release notes"
          tag_name: ${{ needs.Build.outputs.raised_version }}
          target_commitish: ${{ steps.commit.outputs.commit_id }}
          token: ${{ secrets.auto_commit_pwd }}
          prerelease: true
          generate_release_notes: true
