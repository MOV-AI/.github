name: Create Generic Release
on:
  workflow_call:
    secrets:
      auto_commit_user:
        required: true
      auto_commit_mail:
        required: true
      auto_commit_pwd:
        required: true

jobs:
  Release:
    timeout-minutes: 30
    name: "Release Script"
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Find Package details
      id: vars
      run: |
        PACKAGE_VERSION=$(cat version)
        echo "pkg_version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT

    - name: Raise Version
      id: vars-after-raise
      run: |
        PACKAGE_VERSION=${{ steps.vars.outputs.pkg_version }}
        main_version=${PACKAGE_VERSION%-*}
        build_id="${PACKAGE_VERSION#*-}"
        raised_buildid=$(($build_id+1))
        RAISED_PACKAGE_VERSION="$main_version-$raised_buildid"
        echo "${RAISED_PACKAGE_VERSION}" > version
        echo "pkg_version=${RAISED_PACKAGE_VERSION}" >> $GITHUB_OUTPUT

    - name: Commit raise version
      id: raise
      run: |
        git config --global --add safe.directory $(pwd)
        git config --global user.name ${{ secrets.auto_commit_user }}
        git config --global user.email ${{ secrets.auto_commit_mail }}
        git config --global user.password ${{ secrets.auto_commit_pwd }}
        git pull
        git add version
        git commit -m "[skip actions] Automatic Bump of build version"

    - name: Prepare raise variables
      id: pre_raise
      run: |
        echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

    - name: Raise App version
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.auto_commit_pwd }}
        branch: ${{ steps.pre_raise.outputs.branch }}
        unprotect_reviews: true

    - name: Commit info
      id: commit
      shell: bash
      run: |
        commit_hash=$(git log --format="%H" -n 1)
        echo "commit_id=${commit_hash}" >> $GITHUB_OUTPUT

    - name: Create Github Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Release of ${{ steps.vars-after-raise.outputs.pkg_version }}"
        body: "Please add release notes"
        tag_name: ${{ steps.vars-after-raise.outputs.pkg_version }}
        target_commitish: ${{ steps.commit.outputs.commit_id }}
        token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: true
        generate_release_notes: true
