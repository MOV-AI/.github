name: Build and pack Npm components
on:
  workflow_call:
    inputs:
      deploy:
        required: false
        type: string
        default: 'false'
      run_tests:
        required: false
        type: string
        default: 'true'
      npm_version:
        required: false
        type: string
        default: '>=16.18.0'
      legacy:
        required: false
        type: boolean
        default: false
      pm:
        required: false
        type: string
        default: "npm"

    secrets:
      auto_commit_user:
        required: true
      auto_commit_mail:
        required: true
      auto_commit_pwd:
        required: true
      registry_user:
        required: true
      registry_password:
        required: true
      gh_token:
        required: true
      sonar_token:
        required: true
      npm_token:
        required: true

jobs:
  Build:

    runs-on: ubuntu-20.04
    container:
      image: registry.aws.cloud.mov.ai/qa/npm-buildserver:v1.0.0
      options: --user root
      credentials:
        username: ${{secrets.registry_user}}
        password: ${{secrets.registry_password}}
    env:
      NODE_AUTH_TOKEN: ${{ secrets.npm_token }}


    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        submodules: recursive
        token: ${{ secrets.npm_token }}

    - name: Setup Github as proxy Registry
      uses: actions/setup-node@v3
      with:
        node-version: '${{ inputs.npm_version }}'
        registry-url: 'https://npm.pkg.github.com/mov-ai'
    - name: Install pnpm
      if: ${{ inputs.pm == 'pnpm' }}
      run: |
        npm install -g pnpm

    - name: Setup .npmrc
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.npm_token }}" > .npmrc
      env:
        npm_token: ${{ secrets.npm_token }}


    - name: Raise App version
      run: |
        git config --global --add safe.directory $(pwd)
        git config --global user.name '${{ secrets.auto_commit_user }}'
        git config --global user.email '${{ secrets.auto_commit_mail }}'
        git config --global user.password ${{ secrets.auto_commit_pwd }}
        ${{ inputs.pm }} version prerelease --no-git-tag-version

    - name: Install dependencies
      run: |
        if test "${{ inputs.pm }}" = "pnpm"; then
          pnpm i
        elif ${{ inputs.legacy }}; then
          npm ci --loglevel verbose --legacy-peer-deps
        else
          npm ci --loglevel verbose
        fi

    - name: Build
      run: ${{ inputs.pm }} run build

    - name: Check NPM log on failure
      if: ${{ failure() }}
      run: cat /github/home/.npm/_logs/*.log

    - name: Run tests
      if: ${{ inputs.run_tests == 'true' }}
      run: ${{ inputs.pm }} run test

    - name: Create SonarCloud project and disable autoscan
      uses: MOV-AI/action-sonarcloud-proj-config@v1
      with:
        sonar_org: 'mov-ai'
        sonar_token: ${{ secrets.sonar_token }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.sonar_token }}
      with:
        projectBaseDir: ./
        args: >
          -Dsonar.organization=mov-ai
          -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.event.repository.name }}
          -Dsonar.sources=.
          -Dsonar.scm.provider=git
          -Dsonar.qualitygate.wait=true
          -Dsonar.qualitygate.timeout=300

    - name: Link to SonarCloud dashboard
      shell: bash
      run: |
        echo "Please check report here: https://sonarcloud.io/project/overview?id=${{ github.repository_owner }}_${{ github.event.repository.name }}"

    - name: Publish
      if: ${{ inputs.deploy == 'true' }}
      run: |
        if test "${{ inputs.pm }}" = "pnpm"; then
          pnpm publish --no-git-checks
        else
          npm publish
        fi


  Post-publish:
    if: ${{ inputs.deploy == 'true' }}
    runs-on: ubuntu-20.04
    needs:  [Build]
    container:
      image: registry.aws.cloud.mov.ai/qa/npm-buildserver:v1.0.0
      options: --user root
      credentials:
        username: ${{secrets.registry_user}}
        password: ${{secrets.registry_password}}
    env:
      NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

    steps:
    - name: Checkout
      if: ${{ inputs.deploy == 'true' }}
      uses: actions/checkout@v3
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
        submodules: recursive
        token: ${{ secrets.npm_token }}

    - name: Setup Github as proxy Registry
      uses: actions/setup-node@v3
      with:
        node-version: '${{ inputs.npm_version }}'
        registry-url: 'https://npm.pkg.github.com/mov-ai'

    - name: Setup .npmrc and install pnpm
      if: ${{ inputs.pm == 'pnpm' }}
      run: |
        npm install -g pnpm
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.npm_token }}" > .npmrc
      env:
        npm_token: ${{ secrets.npm_token }}

    - name: Find Package details
      id: vars
      run: |
        PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
        echo "pkg_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

    - name: Raise App version
      id: raise
      run: |
        git config --global --add safe.directory $(pwd)
        git config --global user.name '${{ secrets.auto_commit_user }}'
        git config --global user.email '${{ secrets.auto_commit_mail }}'
        git config --global user.password ${{ secrets.auto_commit_pwd }}
        ${{ inputs.pm }} version prerelease -m "[skip actions] Automatic Bump of build version"
        git add package.*

    - name: Prepare raise variables
      id: pre_raise
      run: |
        echo "branch=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT

    - name: Raise App version
      uses: CasperWA/push-protected@v2.14.0
      with:
        token: ${{ secrets.auto_commit_pwd }}
        branch: ${{ steps.pre_raise.outputs.branch }}
        unprotect_reviews: true

    - name: Find Package details
      id: vars-after-raise
      run: |
        PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
        PACKAGE_NAME=$(cat package.json | grep name |head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')

        echo "npm_pkg_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "npm_pkg_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

    - name: Create Github Release
      shell: bash
      run: |
        commit_hash=$(git log --format="%H" -n 1)
        product_version=${{ steps.vars-after-raise.outputs.npm_pkg_version }}
        gh release create -p --generate-notes --notes-start-tag ${{ steps.vars.outputs.pkg_version }} --target $commit_hash -t "Release of $product_version" $product_version
      env:
        GITHUB_TOKEN: ${{ secrets.gh_token }}